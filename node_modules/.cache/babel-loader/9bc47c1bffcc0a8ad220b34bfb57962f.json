{"ast":null,"code":"import _objectWithoutProperties from \"/Users/limengyang/Workspaces/eShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/limengyang/Workspaces/eShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/limengyang/Workspaces/eShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/limengyang/Workspaces/eShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/limengyang/Workspaces/eShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/limengyang/Workspaces/eShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/limengyang/Workspaces/eShop/src/components/common/Snackbar.js\";\nimport React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon_ from \"@material-ui/core/Icon\";\nimport green from \"@material-ui/core/colors/green\";\nimport MuiSnackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/CloseRounded\";\nimport CheckIcon from \"@material-ui/icons/CheckRounded\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport classNames from \"classnames\";\n\nvar styles = function styles(theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    failure: {\n      backgroundColor: theme.palette.error.dark\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n};\n\nvar validStates = [\"SUCCESS\", \"FAILURE\"];\nvar variantIcon = {\n  success: CheckIcon,\n  failure: ErrorIcon\n};\n\nvar Snackbar =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Snackbar, _React$PureComponent);\n\n  function Snackbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Snackbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Snackbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Snackbar, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState, nextContext) {\n      if (nextProps.state.state !== this.props.state.state && validStates.includes(nextProps.state.state)) this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          state = _this$props.state,\n          message = _this$props.message,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"className\", \"state\", \"message\"]);\n\n      var open = this.state.open;\n      var Icon = validStates.includes(state.state) ? variantIcon[state.state.toLowerCase()] : Icon_;\n      if (!message[\"failure\"]) message[\"failure\"] = \"Some errors happen: \".concat(state.reason);\n      return React.createElement(MuiSnackbar, {\n        open: open,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(SnackbarContent, Object.assign({\n        className: classNames(classes[state.state.toLowerCase()], className),\n        \"aria-describedby\": \"client-snackbar\",\n        message: React.createElement(\"span\", {\n          id: \"client-snackbar\",\n          className: classes.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: classNames(classes.icon, classes.iconVariant),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), message[state.state.toLowerCase()]),\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }))]\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Snackbar;\n}(React.PureComponent);\n\nSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.object,\n  state: PropTypes.shape({\n    state: PropTypes.string.isRequired,\n    reason: PropTypes.string.isRequired\n  }).isRequired,\n  message: PropTypes.shape({\n    success: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    failure: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n  })\n};\nexport default withStyles(styles)(Snackbar);","map":{"version":3,"sources":["/Users/limengyang/Workspaces/eShop/src/components/common/Snackbar.js"],"names":["React","PropTypes","SnackbarContent","IconButton","Icon_","green","MuiSnackbar","CloseIcon","CheckIcon","ErrorIcon","withStyles","classNames","styles","theme","success","backgroundColor","failure","palette","error","dark","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","validStates","variantIcon","Snackbar","state","open","handleClose","setState","nextProps","nextState","nextContext","props","includes","classes","className","other","Icon","toLowerCase","reason","vertical","horizontal","close","PureComponent","propTypes","object","isRequired","shape","string","oneOfType","node"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon_ from \"@material-ui/core/Icon\";\nimport green from \"@material-ui/core/colors/green\";\nimport MuiSnackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/CloseRounded\";\nimport CheckIcon from \"@material-ui/icons/CheckRounded\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport classNames from \"classnames\";\n\nconst styles = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    failure: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nconst validStates = [\"SUCCESS\", \"FAILURE\"];\n\nconst variantIcon = {\n    success: CheckIcon,\n    failure: ErrorIcon,\n};\n\n\nclass Snackbar extends React.PureComponent {\n\n    state = {\n        open: false,\n    };\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (nextProps.state.state !== this.props.state.state &&\n            validStates.includes(nextProps.state.state))\n            this.setState({open: true});\n    }\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        const {classes, className, state, message, ...other} = this.props;\n        const {open} = this.state;\n\n        const Icon = validStates.includes(state.state) ? variantIcon[state.state.toLowerCase()] : Icon_;\n\n        if (!message[\"failure\"])\n            message[\"failure\"] = `Some errors happen: ${state.reason}`;\n\n        return (\n            <MuiSnackbar\n                open={open}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <SnackbarContent\n                    className={classNames(classes[state.state.toLowerCase()], className)}\n                    aria-describedby=\"client-snackbar\"\n                    message={\n                        <span id=\"client-snackbar\" className={classes.message}>\n                            <Icon className={classNames(classes.icon, classes.iconVariant)}/>\n                            {message[state.state.toLowerCase()]}\n                        </span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.handleClose}\n                        >\n                            <CloseIcon className={classes.icon}/>\n                        </IconButton>,\n                    ]}\n                    {...other}\n                />\n            </MuiSnackbar>\n        );\n    }\n}\n\nSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.object,\n    state: PropTypes.shape({\n        state: PropTypes.string.isRequired,\n        reason: PropTypes.string.isRequired,\n    }).isRequired,\n    message: PropTypes.shape({\n        success: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        failure: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    }),\n};\n\nexport default withStyles(styles)(Snackbar);\n"]},"metadata":{},"sourceType":"module"}